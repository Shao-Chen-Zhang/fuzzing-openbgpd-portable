# Makefile.in generated by automake 1.17 from Makefile.am.
# src/bgpd/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2024 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright (c) 2019 Brent Cook
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
am__rm_f = rm -f $(am__rm_f_notfound)
am__rm_rf = rm -rf $(am__rm_f_notfound)
pkgdatadir = $(datadir)/openbgpd
pkgincludedir = $(includedir)/openbgpd
pkglibdir = $(libdir)/openbgpd
pkglibexecdir = $(libexecdir)/openbgpd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-freebsd14.3
host_triplet = x86_64-unknown-freebsd14.3
sbin_PROGRAMS = bgpd$(EXEEXT)
#am__append_1 = kroute-disabled.c
#am__append_2 = kroute.c
am__append_3 = kroute-freebsd.c
##am__append_4 = kroute-linux.c
#am__append_5 = kroute-disabled.c
#am__append_6 = pfkey.c
am__append_7 = pfkey-freebsd.c
##am__append_8 = pfkey-linux.c
#am__append_9 = pfkey-disabled.c
am__append_10 = pftable.c
#am__append_11 = pftable-disabled.c
#am__append_12 = carp.c
am__append_13 = carp-disabled.c
subdir = src/bgpd
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man5dir)" \
	"$(DESTDIR)$(man8dir)"
PROGRAMS = $(sbin_PROGRAMS)
am__bgpd_SOURCES_DIST = bgpd.c session.c session_bgp.c log.c logmsg.c \
	parse.y config.c rde.c rde_rib.c rde_decide.c rde_prefix.c \
	monotime.c mrt.c kroute-disabled.c kroute.c kroute-freebsd.c \
	kroute-linux.c control.c pfkey.c pfkey-freebsd.c pfkey-linux.c \
	pfkey-disabled.c rde_update.c rde_attr.c rde_community.c \
	printconf.c rde_filter.c rde_sets.c rde_trie.c rde_aspa.c \
	pftable.c pftable-disabled.c name2id.c util.c carp.c \
	carp-disabled.c timer.c rde_peer.c rtr.c rtr_proto.c \
	flowspec.c
#am__objects_1 = bgpd-kroute-disabled.$(OBJEXT)
#am__objects_2 =  \
#	bgpd-kroute.$(OBJEXT)
am__objects_3 = bgpd-kroute-freebsd.$(OBJEXT)
##am__objects_4 = bgpd-kroute-linux.$(OBJEXT)
#am__objects_5 = bgpd-kroute-disabled.$(OBJEXT)
#am__objects_6 = bgpd-pfkey.$(OBJEXT)
am__objects_7 = bgpd-pfkey-freebsd.$(OBJEXT)
##am__objects_8 = bgpd-pfkey-linux.$(OBJEXT)
#am__objects_9 = bgpd-pfkey-disabled.$(OBJEXT)
am__objects_10 = bgpd-pftable.$(OBJEXT)
#am__objects_11 = bgpd-pftable-disabled.$(OBJEXT)
#am__objects_12 = bgpd-carp.$(OBJEXT)
am__objects_13 = bgpd-carp-disabled.$(OBJEXT)
am_bgpd_OBJECTS = bgpd-bgpd.$(OBJEXT) bgpd-session.$(OBJEXT) \
	bgpd-session_bgp.$(OBJEXT) bgpd-log.$(OBJEXT) \
	bgpd-logmsg.$(OBJEXT) bgpd-parse.$(OBJEXT) \
	bgpd-config.$(OBJEXT) bgpd-rde.$(OBJEXT) \
	bgpd-rde_rib.$(OBJEXT) bgpd-rde_decide.$(OBJEXT) \
	bgpd-rde_prefix.$(OBJEXT) bgpd-monotime.$(OBJEXT) \
	bgpd-mrt.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	bgpd-control.$(OBJEXT) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) bgpd-rde_update.$(OBJEXT) \
	bgpd-rde_attr.$(OBJEXT) bgpd-rde_community.$(OBJEXT) \
	bgpd-printconf.$(OBJEXT) bgpd-rde_filter.$(OBJEXT) \
	bgpd-rde_sets.$(OBJEXT) bgpd-rde_trie.$(OBJEXT) \
	bgpd-rde_aspa.$(OBJEXT) $(am__objects_10) $(am__objects_11) \
	bgpd-name2id.$(OBJEXT) bgpd-util.$(OBJEXT) $(am__objects_12) \
	$(am__objects_13) bgpd-timer.$(OBJEXT) bgpd-rde_peer.$(OBJEXT) \
	bgpd-rtr.$(OBJEXT) bgpd-rtr_proto.$(OBJEXT) \
	bgpd-flowspec.$(OBJEXT)
bgpd_OBJECTS = $(am_bgpd_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
bgpd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(bgpd_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/bgpd-bgpd.Po \
	./$(DEPDIR)/bgpd-carp-disabled.Po ./$(DEPDIR)/bgpd-carp.Po \
	./$(DEPDIR)/bgpd-config.Po ./$(DEPDIR)/bgpd-control.Po \
	./$(DEPDIR)/bgpd-flowspec.Po \
	./$(DEPDIR)/bgpd-kroute-disabled.Po \
	./$(DEPDIR)/bgpd-kroute-freebsd.Po \
	./$(DEPDIR)/bgpd-kroute-linux.Po ./$(DEPDIR)/bgpd-kroute.Po \
	./$(DEPDIR)/bgpd-log.Po ./$(DEPDIR)/bgpd-logmsg.Po \
	./$(DEPDIR)/bgpd-monotime.Po ./$(DEPDIR)/bgpd-mrt.Po \
	./$(DEPDIR)/bgpd-name2id.Po ./$(DEPDIR)/bgpd-parse.Po \
	./$(DEPDIR)/bgpd-pfkey-disabled.Po \
	./$(DEPDIR)/bgpd-pfkey-freebsd.Po \
	./$(DEPDIR)/bgpd-pfkey-linux.Po ./$(DEPDIR)/bgpd-pfkey.Po \
	./$(DEPDIR)/bgpd-pftable-disabled.Po \
	./$(DEPDIR)/bgpd-pftable.Po ./$(DEPDIR)/bgpd-printconf.Po \
	./$(DEPDIR)/bgpd-rde.Po ./$(DEPDIR)/bgpd-rde_aspa.Po \
	./$(DEPDIR)/bgpd-rde_attr.Po ./$(DEPDIR)/bgpd-rde_community.Po \
	./$(DEPDIR)/bgpd-rde_decide.Po ./$(DEPDIR)/bgpd-rde_filter.Po \
	./$(DEPDIR)/bgpd-rde_peer.Po ./$(DEPDIR)/bgpd-rde_prefix.Po \
	./$(DEPDIR)/bgpd-rde_rib.Po ./$(DEPDIR)/bgpd-rde_sets.Po \
	./$(DEPDIR)/bgpd-rde_trie.Po ./$(DEPDIR)/bgpd-rde_update.Po \
	./$(DEPDIR)/bgpd-rtr.Po ./$(DEPDIR)/bgpd-rtr_proto.Po \
	./$(DEPDIR)/bgpd-session.Po ./$(DEPDIR)/bgpd-session_bgp.Po \
	./$(DEPDIR)/bgpd-timer.Po ./$(DEPDIR)/bgpd-util.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(bgpd_SOURCES)
DIST_SOURCES = $(am__bgpd_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
  || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
       $(am__cd) "$$dir" && echo $$files | $(am__xargs_n) 40 $(am__rm_f); }; \
  }
man5dir = $(mandir)/man5
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/ylwrap parse.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/root/fuzzing-openbgpd-portable/missing' aclocal-1.17
AMTAR = $${TAR-tar}
AM_CFLAGS =  -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wshadow -Wpointer-arith -Wcast-qual -Wsign-compare -Wno-pointer-sign -Qunused-arguments 
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS =  -Qunused-arguments 
AR = ar
AUTOCONF = ${SHELL} '/root/fuzzing-openbgpd-portable/missing' autoconf
AUTOHEADER = ${SHELL} '/root/fuzzing-openbgpd-portable/missing' autoheader
AUTOMAKE = ${SHELL} '/root/fuzzing-openbgpd-portable/missing' automake-1.17
AWK = nawk
BGPD_USER = _bgpd
BGPLGD_USER = _bgplgd
# FUZZ
CC = afl-clang-lto
# CC = cc
CCDEPMODE = depmode=gcc3
# DEBUG
CFLAGS = -g -O0
#CFLAGS = -g -O2
CPPFLAGS = -I/usr/local/include
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"OpenBGPD\" -DPACKAGE_TARNAME=\"openbgpd\" -DPACKAGE_VERSION=\"8.8\" -DPACKAGE_STRING=\"OpenBGPD\ 8.8\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"openbgpd\" -DVERSION=\"8.8\" -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_ENDIAN_H=1 -DHAVE_ASPRINTF=1 -DHAVE_EXPLICIT_BZERO=1 -DHAVE_REALLOCARRAY=1 -DHAVE_SETPROCTITLE=1 -DHAVE_SETGROUPS=1 -DHAVE_SETREGID=1 -DHAVE_SETRESGID=1 -DHAVE_SETREUID=1 -DHAVE_SETRESUID=1 -DHAVE_STRLCAT=1 -DHAVE_STRLCPY=1 -DHAVE_STRTONUM=1 -DHAVE_SYSCONF=1 -DHAVE_STRNVIS=1 -DHAVE_ARC4RANDOM=1 -DHAVE_CLOCK_GETTIME=1 -DHAVE_INET_NET_PTON=1 -DHAVE_NET_PFVAR_H=1 -DHAVE_SETFIB=1 -DHAVE_EVENT_H=1 -DHAVE_LIBEVENT=1 -DHAVE_EVENT_INIT=1 -DHAVE_EVENT_DISPATCH=1 -DBGPD_USER=\"_bgpd\" -DBGPLGD_USER=\"_bgplgd\" -DWWW_USER=\"www\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = file
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = -L/usr/local/lib
LIBOBJS = 
LIBS = -levent 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/root/fuzzing-openbgpd-portable/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = mkdir -p
NM = /usr/bin/nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = openbgpd
PACKAGE_BUGREPORT = 
PACKAGE_NAME = OpenBGPD
PACKAGE_STRING = OpenBGPD 8.8
PACKAGE_TARNAME = openbgpd
PACKAGE_URL = 
PACKAGE_VERSION = 8.8
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 8.8
WWW_USER = www
YACC = byacc
YFLAGS = 
abs_builddir = /root/fuzzing-openbgpd-portable/src/bgpd
abs_srcdir = /root/fuzzing-openbgpd-portable/src/bgpd
abs_top_builddir = /root/fuzzing-openbgpd-portable
abs_top_srcdir = /root/fuzzing-openbgpd-portable
ac_ct_AR = ar
ac_ct_CC = cc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__rm_f_notfound = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
am__xargs_n = xargs -n
bindir = ${exec_prefix}/bin
build = x86_64-unknown-freebsd14.3
build_alias = 
build_cpu = x86_64
build_os = freebsd14.3
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-freebsd14.3
host_alias = 
host_cpu = x86_64
host_os = freebsd14.3
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/fuzzing-openbgpd-portable/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
wwwrunstatedir = 
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src/bgpd
ACLOCAL_AMFLAGS = -Im4
CLEANFILES = $(man_MANS) parse.c
man_MANS = bgpd.8 bgpd.conf.5
EXTRA_DIST = bgpd.8.in bgpd.conf.5.in
bgpd_CFLAGS = $(AM_CFLAGS) -DSYSCONFDIR=\"$(sysconfdir)\" \
	-DRUNSTATEDIR=\"$(runstatedir)\"
bgpd_LDADD = $(PLATFORM_LDADD) $(PROG_LDADD) -lutil \
	$(top_builddir)/compat/libcompat.la \
	$(top_builddir)/compat/libcompatnoopt.la
bgpd_SOURCES = bgpd.c session.c session_bgp.c log.c logmsg.c parse.y \
	config.c rde.c rde_rib.c rde_decide.c rde_prefix.c monotime.c \
	mrt.c $(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) control.c $(am__append_6) \
	$(am__append_7) $(am__append_8) $(am__append_9) rde_update.c \
	rde_attr.c rde_community.c printconf.c rde_filter.c rde_sets.c \
	rde_trie.c rde_aspa.c $(am__append_10) $(am__append_11) \
	name2id.c util.c $(am__append_12) $(am__append_13) timer.c \
	rde_peer.c rtr.c rtr_proto.c flowspec.c
bgpd_DEPENDENCIES = $(man_MANS)
noinst_HEADERS = bgpd.h log.h monotime.h mrt.h rde.h session.h \
	version.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/bgpd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/bgpd/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && $(am__rm_f) $$files

clean-sbinPROGRAMS:
	$(am__rm_f) $(sbin_PROGRAMS)
	test -z "$(EXEEXT)" || $(am__rm_f) $(sbin_PROGRAMS:$(EXEEXT)=)

bgpd$(EXEEXT): $(bgpd_OBJECTS) $(bgpd_DEPENDENCIES) $(EXTRA_bgpd_DEPENDENCIES) 
	@rm -f bgpd$(EXEEXT)
	$(AM_V_CCLD)$(bgpd_LINK) $(bgpd_OBJECTS) $(bgpd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bgpd-bgpd.Po # am--include-marker
include ./$(DEPDIR)/bgpd-carp-disabled.Po # am--include-marker
include ./$(DEPDIR)/bgpd-carp.Po # am--include-marker
include ./$(DEPDIR)/bgpd-config.Po # am--include-marker
include ./$(DEPDIR)/bgpd-control.Po # am--include-marker
include ./$(DEPDIR)/bgpd-flowspec.Po # am--include-marker
include ./$(DEPDIR)/bgpd-kroute-disabled.Po # am--include-marker
include ./$(DEPDIR)/bgpd-kroute-freebsd.Po # am--include-marker
include ./$(DEPDIR)/bgpd-kroute-linux.Po # am--include-marker
include ./$(DEPDIR)/bgpd-kroute.Po # am--include-marker
include ./$(DEPDIR)/bgpd-log.Po # am--include-marker
include ./$(DEPDIR)/bgpd-logmsg.Po # am--include-marker
include ./$(DEPDIR)/bgpd-monotime.Po # am--include-marker
include ./$(DEPDIR)/bgpd-mrt.Po # am--include-marker
include ./$(DEPDIR)/bgpd-name2id.Po # am--include-marker
include ./$(DEPDIR)/bgpd-parse.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pfkey-disabled.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pfkey-freebsd.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pfkey-linux.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pfkey.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pftable-disabled.Po # am--include-marker
include ./$(DEPDIR)/bgpd-pftable.Po # am--include-marker
include ./$(DEPDIR)/bgpd-printconf.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_aspa.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_attr.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_community.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_decide.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_filter.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_peer.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_prefix.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_rib.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_sets.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_trie.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rde_update.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rtr.Po # am--include-marker
include ./$(DEPDIR)/bgpd-rtr_proto.Po # am--include-marker
include ./$(DEPDIR)/bgpd-session.Po # am--include-marker
include ./$(DEPDIR)/bgpd-session_bgp.Po # am--include-marker
include ./$(DEPDIR)/bgpd-timer.Po # am--include-marker
include ./$(DEPDIR)/bgpd-util.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@: >>$@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

bgpd-bgpd.o: bgpd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-bgpd.o -MD -MP -MF $(DEPDIR)/bgpd-bgpd.Tpo -c -o bgpd-bgpd.o `test -f 'bgpd.c' || echo '$(srcdir)/'`bgpd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-bgpd.Tpo $(DEPDIR)/bgpd-bgpd.Po
#	$(AM_V_CC)source='bgpd.c' object='bgpd-bgpd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-bgpd.o `test -f 'bgpd.c' || echo '$(srcdir)/'`bgpd.c

bgpd-bgpd.obj: bgpd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-bgpd.obj -MD -MP -MF $(DEPDIR)/bgpd-bgpd.Tpo -c -o bgpd-bgpd.obj `if test -f 'bgpd.c'; then $(CYGPATH_W) 'bgpd.c'; else $(CYGPATH_W) '$(srcdir)/bgpd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-bgpd.Tpo $(DEPDIR)/bgpd-bgpd.Po
#	$(AM_V_CC)source='bgpd.c' object='bgpd-bgpd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-bgpd.obj `if test -f 'bgpd.c'; then $(CYGPATH_W) 'bgpd.c'; else $(CYGPATH_W) '$(srcdir)/bgpd.c'; fi`

bgpd-session.o: session.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-session.o -MD -MP -MF $(DEPDIR)/bgpd-session.Tpo -c -o bgpd-session.o `test -f 'session.c' || echo '$(srcdir)/'`session.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-session.Tpo $(DEPDIR)/bgpd-session.Po
#	$(AM_V_CC)source='session.c' object='bgpd-session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-session.o `test -f 'session.c' || echo '$(srcdir)/'`session.c

bgpd-session.obj: session.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-session.obj -MD -MP -MF $(DEPDIR)/bgpd-session.Tpo -c -o bgpd-session.obj `if test -f 'session.c'; then $(CYGPATH_W) 'session.c'; else $(CYGPATH_W) '$(srcdir)/session.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-session.Tpo $(DEPDIR)/bgpd-session.Po
#	$(AM_V_CC)source='session.c' object='bgpd-session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-session.obj `if test -f 'session.c'; then $(CYGPATH_W) 'session.c'; else $(CYGPATH_W) '$(srcdir)/session.c'; fi`

bgpd-session_bgp.o: session_bgp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-session_bgp.o -MD -MP -MF $(DEPDIR)/bgpd-session_bgp.Tpo -c -o bgpd-session_bgp.o `test -f 'session_bgp.c' || echo '$(srcdir)/'`session_bgp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-session_bgp.Tpo $(DEPDIR)/bgpd-session_bgp.Po
#	$(AM_V_CC)source='session_bgp.c' object='bgpd-session_bgp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-session_bgp.o `test -f 'session_bgp.c' || echo '$(srcdir)/'`session_bgp.c

bgpd-session_bgp.obj: session_bgp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-session_bgp.obj -MD -MP -MF $(DEPDIR)/bgpd-session_bgp.Tpo -c -o bgpd-session_bgp.obj `if test -f 'session_bgp.c'; then $(CYGPATH_W) 'session_bgp.c'; else $(CYGPATH_W) '$(srcdir)/session_bgp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-session_bgp.Tpo $(DEPDIR)/bgpd-session_bgp.Po
#	$(AM_V_CC)source='session_bgp.c' object='bgpd-session_bgp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-session_bgp.obj `if test -f 'session_bgp.c'; then $(CYGPATH_W) 'session_bgp.c'; else $(CYGPATH_W) '$(srcdir)/session_bgp.c'; fi`

bgpd-log.o: log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-log.o -MD -MP -MF $(DEPDIR)/bgpd-log.Tpo -c -o bgpd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-log.Tpo $(DEPDIR)/bgpd-log.Po
#	$(AM_V_CC)source='log.c' object='bgpd-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

bgpd-log.obj: log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-log.obj -MD -MP -MF $(DEPDIR)/bgpd-log.Tpo -c -o bgpd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-log.Tpo $(DEPDIR)/bgpd-log.Po
#	$(AM_V_CC)source='log.c' object='bgpd-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

bgpd-logmsg.o: logmsg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-logmsg.o -MD -MP -MF $(DEPDIR)/bgpd-logmsg.Tpo -c -o bgpd-logmsg.o `test -f 'logmsg.c' || echo '$(srcdir)/'`logmsg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-logmsg.Tpo $(DEPDIR)/bgpd-logmsg.Po
#	$(AM_V_CC)source='logmsg.c' object='bgpd-logmsg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-logmsg.o `test -f 'logmsg.c' || echo '$(srcdir)/'`logmsg.c

bgpd-logmsg.obj: logmsg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-logmsg.obj -MD -MP -MF $(DEPDIR)/bgpd-logmsg.Tpo -c -o bgpd-logmsg.obj `if test -f 'logmsg.c'; then $(CYGPATH_W) 'logmsg.c'; else $(CYGPATH_W) '$(srcdir)/logmsg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-logmsg.Tpo $(DEPDIR)/bgpd-logmsg.Po
#	$(AM_V_CC)source='logmsg.c' object='bgpd-logmsg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-logmsg.obj `if test -f 'logmsg.c'; then $(CYGPATH_W) 'logmsg.c'; else $(CYGPATH_W) '$(srcdir)/logmsg.c'; fi`

bgpd-parse.o: parse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-parse.o -MD -MP -MF $(DEPDIR)/bgpd-parse.Tpo -c -o bgpd-parse.o `test -f 'parse.c' || echo '$(srcdir)/'`parse.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-parse.Tpo $(DEPDIR)/bgpd-parse.Po
#	$(AM_V_CC)source='parse.c' object='bgpd-parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-parse.o `test -f 'parse.c' || echo '$(srcdir)/'`parse.c

bgpd-parse.obj: parse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-parse.obj -MD -MP -MF $(DEPDIR)/bgpd-parse.Tpo -c -o bgpd-parse.obj `if test -f 'parse.c'; then $(CYGPATH_W) 'parse.c'; else $(CYGPATH_W) '$(srcdir)/parse.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-parse.Tpo $(DEPDIR)/bgpd-parse.Po
#	$(AM_V_CC)source='parse.c' object='bgpd-parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-parse.obj `if test -f 'parse.c'; then $(CYGPATH_W) 'parse.c'; else $(CYGPATH_W) '$(srcdir)/parse.c'; fi`

bgpd-config.o: config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-config.o -MD -MP -MF $(DEPDIR)/bgpd-config.Tpo -c -o bgpd-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-config.Tpo $(DEPDIR)/bgpd-config.Po
#	$(AM_V_CC)source='config.c' object='bgpd-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c

bgpd-config.obj: config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-config.obj -MD -MP -MF $(DEPDIR)/bgpd-config.Tpo -c -o bgpd-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-config.Tpo $(DEPDIR)/bgpd-config.Po
#	$(AM_V_CC)source='config.c' object='bgpd-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`

bgpd-rde.o: rde.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde.o -MD -MP -MF $(DEPDIR)/bgpd-rde.Tpo -c -o bgpd-rde.o `test -f 'rde.c' || echo '$(srcdir)/'`rde.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde.Tpo $(DEPDIR)/bgpd-rde.Po
#	$(AM_V_CC)source='rde.c' object='bgpd-rde.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde.o `test -f 'rde.c' || echo '$(srcdir)/'`rde.c

bgpd-rde.obj: rde.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde.obj -MD -MP -MF $(DEPDIR)/bgpd-rde.Tpo -c -o bgpd-rde.obj `if test -f 'rde.c'; then $(CYGPATH_W) 'rde.c'; else $(CYGPATH_W) '$(srcdir)/rde.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde.Tpo $(DEPDIR)/bgpd-rde.Po
#	$(AM_V_CC)source='rde.c' object='bgpd-rde.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde.obj `if test -f 'rde.c'; then $(CYGPATH_W) 'rde.c'; else $(CYGPATH_W) '$(srcdir)/rde.c'; fi`

bgpd-rde_rib.o: rde_rib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_rib.o -MD -MP -MF $(DEPDIR)/bgpd-rde_rib.Tpo -c -o bgpd-rde_rib.o `test -f 'rde_rib.c' || echo '$(srcdir)/'`rde_rib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_rib.Tpo $(DEPDIR)/bgpd-rde_rib.Po
#	$(AM_V_CC)source='rde_rib.c' object='bgpd-rde_rib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_rib.o `test -f 'rde_rib.c' || echo '$(srcdir)/'`rde_rib.c

bgpd-rde_rib.obj: rde_rib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_rib.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_rib.Tpo -c -o bgpd-rde_rib.obj `if test -f 'rde_rib.c'; then $(CYGPATH_W) 'rde_rib.c'; else $(CYGPATH_W) '$(srcdir)/rde_rib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_rib.Tpo $(DEPDIR)/bgpd-rde_rib.Po
#	$(AM_V_CC)source='rde_rib.c' object='bgpd-rde_rib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_rib.obj `if test -f 'rde_rib.c'; then $(CYGPATH_W) 'rde_rib.c'; else $(CYGPATH_W) '$(srcdir)/rde_rib.c'; fi`

bgpd-rde_decide.o: rde_decide.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_decide.o -MD -MP -MF $(DEPDIR)/bgpd-rde_decide.Tpo -c -o bgpd-rde_decide.o `test -f 'rde_decide.c' || echo '$(srcdir)/'`rde_decide.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_decide.Tpo $(DEPDIR)/bgpd-rde_decide.Po
#	$(AM_V_CC)source='rde_decide.c' object='bgpd-rde_decide.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_decide.o `test -f 'rde_decide.c' || echo '$(srcdir)/'`rde_decide.c

bgpd-rde_decide.obj: rde_decide.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_decide.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_decide.Tpo -c -o bgpd-rde_decide.obj `if test -f 'rde_decide.c'; then $(CYGPATH_W) 'rde_decide.c'; else $(CYGPATH_W) '$(srcdir)/rde_decide.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_decide.Tpo $(DEPDIR)/bgpd-rde_decide.Po
#	$(AM_V_CC)source='rde_decide.c' object='bgpd-rde_decide.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_decide.obj `if test -f 'rde_decide.c'; then $(CYGPATH_W) 'rde_decide.c'; else $(CYGPATH_W) '$(srcdir)/rde_decide.c'; fi`

bgpd-rde_prefix.o: rde_prefix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_prefix.o -MD -MP -MF $(DEPDIR)/bgpd-rde_prefix.Tpo -c -o bgpd-rde_prefix.o `test -f 'rde_prefix.c' || echo '$(srcdir)/'`rde_prefix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_prefix.Tpo $(DEPDIR)/bgpd-rde_prefix.Po
#	$(AM_V_CC)source='rde_prefix.c' object='bgpd-rde_prefix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_prefix.o `test -f 'rde_prefix.c' || echo '$(srcdir)/'`rde_prefix.c

bgpd-rde_prefix.obj: rde_prefix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_prefix.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_prefix.Tpo -c -o bgpd-rde_prefix.obj `if test -f 'rde_prefix.c'; then $(CYGPATH_W) 'rde_prefix.c'; else $(CYGPATH_W) '$(srcdir)/rde_prefix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_prefix.Tpo $(DEPDIR)/bgpd-rde_prefix.Po
#	$(AM_V_CC)source='rde_prefix.c' object='bgpd-rde_prefix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_prefix.obj `if test -f 'rde_prefix.c'; then $(CYGPATH_W) 'rde_prefix.c'; else $(CYGPATH_W) '$(srcdir)/rde_prefix.c'; fi`

bgpd-monotime.o: monotime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-monotime.o -MD -MP -MF $(DEPDIR)/bgpd-monotime.Tpo -c -o bgpd-monotime.o `test -f 'monotime.c' || echo '$(srcdir)/'`monotime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-monotime.Tpo $(DEPDIR)/bgpd-monotime.Po
#	$(AM_V_CC)source='monotime.c' object='bgpd-monotime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-monotime.o `test -f 'monotime.c' || echo '$(srcdir)/'`monotime.c

bgpd-monotime.obj: monotime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-monotime.obj -MD -MP -MF $(DEPDIR)/bgpd-monotime.Tpo -c -o bgpd-monotime.obj `if test -f 'monotime.c'; then $(CYGPATH_W) 'monotime.c'; else $(CYGPATH_W) '$(srcdir)/monotime.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-monotime.Tpo $(DEPDIR)/bgpd-monotime.Po
#	$(AM_V_CC)source='monotime.c' object='bgpd-monotime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-monotime.obj `if test -f 'monotime.c'; then $(CYGPATH_W) 'monotime.c'; else $(CYGPATH_W) '$(srcdir)/monotime.c'; fi`

bgpd-mrt.o: mrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-mrt.o -MD -MP -MF $(DEPDIR)/bgpd-mrt.Tpo -c -o bgpd-mrt.o `test -f 'mrt.c' || echo '$(srcdir)/'`mrt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-mrt.Tpo $(DEPDIR)/bgpd-mrt.Po
#	$(AM_V_CC)source='mrt.c' object='bgpd-mrt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-mrt.o `test -f 'mrt.c' || echo '$(srcdir)/'`mrt.c

bgpd-mrt.obj: mrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-mrt.obj -MD -MP -MF $(DEPDIR)/bgpd-mrt.Tpo -c -o bgpd-mrt.obj `if test -f 'mrt.c'; then $(CYGPATH_W) 'mrt.c'; else $(CYGPATH_W) '$(srcdir)/mrt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-mrt.Tpo $(DEPDIR)/bgpd-mrt.Po
#	$(AM_V_CC)source='mrt.c' object='bgpd-mrt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-mrt.obj `if test -f 'mrt.c'; then $(CYGPATH_W) 'mrt.c'; else $(CYGPATH_W) '$(srcdir)/mrt.c'; fi`

bgpd-kroute-disabled.o: kroute-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-disabled.o -MD -MP -MF $(DEPDIR)/bgpd-kroute-disabled.Tpo -c -o bgpd-kroute-disabled.o `test -f 'kroute-disabled.c' || echo '$(srcdir)/'`kroute-disabled.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-disabled.Tpo $(DEPDIR)/bgpd-kroute-disabled.Po
#	$(AM_V_CC)source='kroute-disabled.c' object='bgpd-kroute-disabled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-disabled.o `test -f 'kroute-disabled.c' || echo '$(srcdir)/'`kroute-disabled.c

bgpd-kroute-disabled.obj: kroute-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-disabled.obj -MD -MP -MF $(DEPDIR)/bgpd-kroute-disabled.Tpo -c -o bgpd-kroute-disabled.obj `if test -f 'kroute-disabled.c'; then $(CYGPATH_W) 'kroute-disabled.c'; else $(CYGPATH_W) '$(srcdir)/kroute-disabled.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-disabled.Tpo $(DEPDIR)/bgpd-kroute-disabled.Po
#	$(AM_V_CC)source='kroute-disabled.c' object='bgpd-kroute-disabled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-disabled.obj `if test -f 'kroute-disabled.c'; then $(CYGPATH_W) 'kroute-disabled.c'; else $(CYGPATH_W) '$(srcdir)/kroute-disabled.c'; fi`

bgpd-kroute.o: kroute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute.o -MD -MP -MF $(DEPDIR)/bgpd-kroute.Tpo -c -o bgpd-kroute.o `test -f 'kroute.c' || echo '$(srcdir)/'`kroute.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute.Tpo $(DEPDIR)/bgpd-kroute.Po
#	$(AM_V_CC)source='kroute.c' object='bgpd-kroute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute.o `test -f 'kroute.c' || echo '$(srcdir)/'`kroute.c

bgpd-kroute.obj: kroute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute.obj -MD -MP -MF $(DEPDIR)/bgpd-kroute.Tpo -c -o bgpd-kroute.obj `if test -f 'kroute.c'; then $(CYGPATH_W) 'kroute.c'; else $(CYGPATH_W) '$(srcdir)/kroute.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute.Tpo $(DEPDIR)/bgpd-kroute.Po
#	$(AM_V_CC)source='kroute.c' object='bgpd-kroute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute.obj `if test -f 'kroute.c'; then $(CYGPATH_W) 'kroute.c'; else $(CYGPATH_W) '$(srcdir)/kroute.c'; fi`

bgpd-kroute-freebsd.o: kroute-freebsd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-freebsd.o -MD -MP -MF $(DEPDIR)/bgpd-kroute-freebsd.Tpo -c -o bgpd-kroute-freebsd.o `test -f 'kroute-freebsd.c' || echo '$(srcdir)/'`kroute-freebsd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-freebsd.Tpo $(DEPDIR)/bgpd-kroute-freebsd.Po
#	$(AM_V_CC)source='kroute-freebsd.c' object='bgpd-kroute-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-freebsd.o `test -f 'kroute-freebsd.c' || echo '$(srcdir)/'`kroute-freebsd.c

bgpd-kroute-freebsd.obj: kroute-freebsd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-freebsd.obj -MD -MP -MF $(DEPDIR)/bgpd-kroute-freebsd.Tpo -c -o bgpd-kroute-freebsd.obj `if test -f 'kroute-freebsd.c'; then $(CYGPATH_W) 'kroute-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/kroute-freebsd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-freebsd.Tpo $(DEPDIR)/bgpd-kroute-freebsd.Po
#	$(AM_V_CC)source='kroute-freebsd.c' object='bgpd-kroute-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-freebsd.obj `if test -f 'kroute-freebsd.c'; then $(CYGPATH_W) 'kroute-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/kroute-freebsd.c'; fi`

bgpd-kroute-linux.o: kroute-linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-linux.o -MD -MP -MF $(DEPDIR)/bgpd-kroute-linux.Tpo -c -o bgpd-kroute-linux.o `test -f 'kroute-linux.c' || echo '$(srcdir)/'`kroute-linux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-linux.Tpo $(DEPDIR)/bgpd-kroute-linux.Po
#	$(AM_V_CC)source='kroute-linux.c' object='bgpd-kroute-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-linux.o `test -f 'kroute-linux.c' || echo '$(srcdir)/'`kroute-linux.c

bgpd-kroute-linux.obj: kroute-linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-kroute-linux.obj -MD -MP -MF $(DEPDIR)/bgpd-kroute-linux.Tpo -c -o bgpd-kroute-linux.obj `if test -f 'kroute-linux.c'; then $(CYGPATH_W) 'kroute-linux.c'; else $(CYGPATH_W) '$(srcdir)/kroute-linux.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-kroute-linux.Tpo $(DEPDIR)/bgpd-kroute-linux.Po
#	$(AM_V_CC)source='kroute-linux.c' object='bgpd-kroute-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-kroute-linux.obj `if test -f 'kroute-linux.c'; then $(CYGPATH_W) 'kroute-linux.c'; else $(CYGPATH_W) '$(srcdir)/kroute-linux.c'; fi`

bgpd-control.o: control.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-control.o -MD -MP -MF $(DEPDIR)/bgpd-control.Tpo -c -o bgpd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-control.Tpo $(DEPDIR)/bgpd-control.Po
#	$(AM_V_CC)source='control.c' object='bgpd-control.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c

bgpd-control.obj: control.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-control.obj -MD -MP -MF $(DEPDIR)/bgpd-control.Tpo -c -o bgpd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-control.Tpo $(DEPDIR)/bgpd-control.Po
#	$(AM_V_CC)source='control.c' object='bgpd-control.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`

bgpd-pfkey.o: pfkey.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey.o -MD -MP -MF $(DEPDIR)/bgpd-pfkey.Tpo -c -o bgpd-pfkey.o `test -f 'pfkey.c' || echo '$(srcdir)/'`pfkey.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey.Tpo $(DEPDIR)/bgpd-pfkey.Po
#	$(AM_V_CC)source='pfkey.c' object='bgpd-pfkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey.o `test -f 'pfkey.c' || echo '$(srcdir)/'`pfkey.c

bgpd-pfkey.obj: pfkey.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey.obj -MD -MP -MF $(DEPDIR)/bgpd-pfkey.Tpo -c -o bgpd-pfkey.obj `if test -f 'pfkey.c'; then $(CYGPATH_W) 'pfkey.c'; else $(CYGPATH_W) '$(srcdir)/pfkey.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey.Tpo $(DEPDIR)/bgpd-pfkey.Po
#	$(AM_V_CC)source='pfkey.c' object='bgpd-pfkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey.obj `if test -f 'pfkey.c'; then $(CYGPATH_W) 'pfkey.c'; else $(CYGPATH_W) '$(srcdir)/pfkey.c'; fi`

bgpd-pfkey-freebsd.o: pfkey-freebsd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-freebsd.o -MD -MP -MF $(DEPDIR)/bgpd-pfkey-freebsd.Tpo -c -o bgpd-pfkey-freebsd.o `test -f 'pfkey-freebsd.c' || echo '$(srcdir)/'`pfkey-freebsd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-freebsd.Tpo $(DEPDIR)/bgpd-pfkey-freebsd.Po
#	$(AM_V_CC)source='pfkey-freebsd.c' object='bgpd-pfkey-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-freebsd.o `test -f 'pfkey-freebsd.c' || echo '$(srcdir)/'`pfkey-freebsd.c

bgpd-pfkey-freebsd.obj: pfkey-freebsd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-freebsd.obj -MD -MP -MF $(DEPDIR)/bgpd-pfkey-freebsd.Tpo -c -o bgpd-pfkey-freebsd.obj `if test -f 'pfkey-freebsd.c'; then $(CYGPATH_W) 'pfkey-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-freebsd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-freebsd.Tpo $(DEPDIR)/bgpd-pfkey-freebsd.Po
#	$(AM_V_CC)source='pfkey-freebsd.c' object='bgpd-pfkey-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-freebsd.obj `if test -f 'pfkey-freebsd.c'; then $(CYGPATH_W) 'pfkey-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-freebsd.c'; fi`

bgpd-pfkey-linux.o: pfkey-linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-linux.o -MD -MP -MF $(DEPDIR)/bgpd-pfkey-linux.Tpo -c -o bgpd-pfkey-linux.o `test -f 'pfkey-linux.c' || echo '$(srcdir)/'`pfkey-linux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-linux.Tpo $(DEPDIR)/bgpd-pfkey-linux.Po
#	$(AM_V_CC)source='pfkey-linux.c' object='bgpd-pfkey-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-linux.o `test -f 'pfkey-linux.c' || echo '$(srcdir)/'`pfkey-linux.c

bgpd-pfkey-linux.obj: pfkey-linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-linux.obj -MD -MP -MF $(DEPDIR)/bgpd-pfkey-linux.Tpo -c -o bgpd-pfkey-linux.obj `if test -f 'pfkey-linux.c'; then $(CYGPATH_W) 'pfkey-linux.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-linux.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-linux.Tpo $(DEPDIR)/bgpd-pfkey-linux.Po
#	$(AM_V_CC)source='pfkey-linux.c' object='bgpd-pfkey-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-linux.obj `if test -f 'pfkey-linux.c'; then $(CYGPATH_W) 'pfkey-linux.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-linux.c'; fi`

bgpd-pfkey-disabled.o: pfkey-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-disabled.o -MD -MP -MF $(DEPDIR)/bgpd-pfkey-disabled.Tpo -c -o bgpd-pfkey-disabled.o `test -f 'pfkey-disabled.c' || echo '$(srcdir)/'`pfkey-disabled.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-disabled.Tpo $(DEPDIR)/bgpd-pfkey-disabled.Po
#	$(AM_V_CC)source='pfkey-disabled.c' object='bgpd-pfkey-disabled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-disabled.o `test -f 'pfkey-disabled.c' || echo '$(srcdir)/'`pfkey-disabled.c

bgpd-pfkey-disabled.obj: pfkey-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pfkey-disabled.obj -MD -MP -MF $(DEPDIR)/bgpd-pfkey-disabled.Tpo -c -o bgpd-pfkey-disabled.obj `if test -f 'pfkey-disabled.c'; then $(CYGPATH_W) 'pfkey-disabled.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-disabled.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pfkey-disabled.Tpo $(DEPDIR)/bgpd-pfkey-disabled.Po
#	$(AM_V_CC)source='pfkey-disabled.c' object='bgpd-pfkey-disabled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pfkey-disabled.obj `if test -f 'pfkey-disabled.c'; then $(CYGPATH_W) 'pfkey-disabled.c'; else $(CYGPATH_W) '$(srcdir)/pfkey-disabled.c'; fi`

bgpd-rde_update.o: rde_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_update.o -MD -MP -MF $(DEPDIR)/bgpd-rde_update.Tpo -c -o bgpd-rde_update.o `test -f 'rde_update.c' || echo '$(srcdir)/'`rde_update.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_update.Tpo $(DEPDIR)/bgpd-rde_update.Po
#	$(AM_V_CC)source='rde_update.c' object='bgpd-rde_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_update.o `test -f 'rde_update.c' || echo '$(srcdir)/'`rde_update.c

bgpd-rde_update.obj: rde_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_update.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_update.Tpo -c -o bgpd-rde_update.obj `if test -f 'rde_update.c'; then $(CYGPATH_W) 'rde_update.c'; else $(CYGPATH_W) '$(srcdir)/rde_update.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_update.Tpo $(DEPDIR)/bgpd-rde_update.Po
#	$(AM_V_CC)source='rde_update.c' object='bgpd-rde_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_update.obj `if test -f 'rde_update.c'; then $(CYGPATH_W) 'rde_update.c'; else $(CYGPATH_W) '$(srcdir)/rde_update.c'; fi`

bgpd-rde_attr.o: rde_attr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_attr.o -MD -MP -MF $(DEPDIR)/bgpd-rde_attr.Tpo -c -o bgpd-rde_attr.o `test -f 'rde_attr.c' || echo '$(srcdir)/'`rde_attr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_attr.Tpo $(DEPDIR)/bgpd-rde_attr.Po
#	$(AM_V_CC)source='rde_attr.c' object='bgpd-rde_attr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_attr.o `test -f 'rde_attr.c' || echo '$(srcdir)/'`rde_attr.c

bgpd-rde_attr.obj: rde_attr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_attr.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_attr.Tpo -c -o bgpd-rde_attr.obj `if test -f 'rde_attr.c'; then $(CYGPATH_W) 'rde_attr.c'; else $(CYGPATH_W) '$(srcdir)/rde_attr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_attr.Tpo $(DEPDIR)/bgpd-rde_attr.Po
#	$(AM_V_CC)source='rde_attr.c' object='bgpd-rde_attr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_attr.obj `if test -f 'rde_attr.c'; then $(CYGPATH_W) 'rde_attr.c'; else $(CYGPATH_W) '$(srcdir)/rde_attr.c'; fi`

bgpd-rde_community.o: rde_community.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_community.o -MD -MP -MF $(DEPDIR)/bgpd-rde_community.Tpo -c -o bgpd-rde_community.o `test -f 'rde_community.c' || echo '$(srcdir)/'`rde_community.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_community.Tpo $(DEPDIR)/bgpd-rde_community.Po
#	$(AM_V_CC)source='rde_community.c' object='bgpd-rde_community.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_community.o `test -f 'rde_community.c' || echo '$(srcdir)/'`rde_community.c

bgpd-rde_community.obj: rde_community.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_community.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_community.Tpo -c -o bgpd-rde_community.obj `if test -f 'rde_community.c'; then $(CYGPATH_W) 'rde_community.c'; else $(CYGPATH_W) '$(srcdir)/rde_community.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_community.Tpo $(DEPDIR)/bgpd-rde_community.Po
#	$(AM_V_CC)source='rde_community.c' object='bgpd-rde_community.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_community.obj `if test -f 'rde_community.c'; then $(CYGPATH_W) 'rde_community.c'; else $(CYGPATH_W) '$(srcdir)/rde_community.c'; fi`

bgpd-printconf.o: printconf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-printconf.o -MD -MP -MF $(DEPDIR)/bgpd-printconf.Tpo -c -o bgpd-printconf.o `test -f 'printconf.c' || echo '$(srcdir)/'`printconf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-printconf.Tpo $(DEPDIR)/bgpd-printconf.Po
#	$(AM_V_CC)source='printconf.c' object='bgpd-printconf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-printconf.o `test -f 'printconf.c' || echo '$(srcdir)/'`printconf.c

bgpd-printconf.obj: printconf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-printconf.obj -MD -MP -MF $(DEPDIR)/bgpd-printconf.Tpo -c -o bgpd-printconf.obj `if test -f 'printconf.c'; then $(CYGPATH_W) 'printconf.c'; else $(CYGPATH_W) '$(srcdir)/printconf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-printconf.Tpo $(DEPDIR)/bgpd-printconf.Po
#	$(AM_V_CC)source='printconf.c' object='bgpd-printconf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-printconf.obj `if test -f 'printconf.c'; then $(CYGPATH_W) 'printconf.c'; else $(CYGPATH_W) '$(srcdir)/printconf.c'; fi`

bgpd-rde_filter.o: rde_filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_filter.o -MD -MP -MF $(DEPDIR)/bgpd-rde_filter.Tpo -c -o bgpd-rde_filter.o `test -f 'rde_filter.c' || echo '$(srcdir)/'`rde_filter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_filter.Tpo $(DEPDIR)/bgpd-rde_filter.Po
#	$(AM_V_CC)source='rde_filter.c' object='bgpd-rde_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_filter.o `test -f 'rde_filter.c' || echo '$(srcdir)/'`rde_filter.c

bgpd-rde_filter.obj: rde_filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_filter.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_filter.Tpo -c -o bgpd-rde_filter.obj `if test -f 'rde_filter.c'; then $(CYGPATH_W) 'rde_filter.c'; else $(CYGPATH_W) '$(srcdir)/rde_filter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_filter.Tpo $(DEPDIR)/bgpd-rde_filter.Po
#	$(AM_V_CC)source='rde_filter.c' object='bgpd-rde_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_filter.obj `if test -f 'rde_filter.c'; then $(CYGPATH_W) 'rde_filter.c'; else $(CYGPATH_W) '$(srcdir)/rde_filter.c'; fi`

bgpd-rde_sets.o: rde_sets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_sets.o -MD -MP -MF $(DEPDIR)/bgpd-rde_sets.Tpo -c -o bgpd-rde_sets.o `test -f 'rde_sets.c' || echo '$(srcdir)/'`rde_sets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_sets.Tpo $(DEPDIR)/bgpd-rde_sets.Po
#	$(AM_V_CC)source='rde_sets.c' object='bgpd-rde_sets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_sets.o `test -f 'rde_sets.c' || echo '$(srcdir)/'`rde_sets.c

bgpd-rde_sets.obj: rde_sets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_sets.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_sets.Tpo -c -o bgpd-rde_sets.obj `if test -f 'rde_sets.c'; then $(CYGPATH_W) 'rde_sets.c'; else $(CYGPATH_W) '$(srcdir)/rde_sets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_sets.Tpo $(DEPDIR)/bgpd-rde_sets.Po
#	$(AM_V_CC)source='rde_sets.c' object='bgpd-rde_sets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_sets.obj `if test -f 'rde_sets.c'; then $(CYGPATH_W) 'rde_sets.c'; else $(CYGPATH_W) '$(srcdir)/rde_sets.c'; fi`

bgpd-rde_trie.o: rde_trie.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_trie.o -MD -MP -MF $(DEPDIR)/bgpd-rde_trie.Tpo -c -o bgpd-rde_trie.o `test -f 'rde_trie.c' || echo '$(srcdir)/'`rde_trie.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_trie.Tpo $(DEPDIR)/bgpd-rde_trie.Po
#	$(AM_V_CC)source='rde_trie.c' object='bgpd-rde_trie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_trie.o `test -f 'rde_trie.c' || echo '$(srcdir)/'`rde_trie.c

bgpd-rde_trie.obj: rde_trie.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_trie.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_trie.Tpo -c -o bgpd-rde_trie.obj `if test -f 'rde_trie.c'; then $(CYGPATH_W) 'rde_trie.c'; else $(CYGPATH_W) '$(srcdir)/rde_trie.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_trie.Tpo $(DEPDIR)/bgpd-rde_trie.Po
#	$(AM_V_CC)source='rde_trie.c' object='bgpd-rde_trie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_trie.obj `if test -f 'rde_trie.c'; then $(CYGPATH_W) 'rde_trie.c'; else $(CYGPATH_W) '$(srcdir)/rde_trie.c'; fi`

bgpd-rde_aspa.o: rde_aspa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_aspa.o -MD -MP -MF $(DEPDIR)/bgpd-rde_aspa.Tpo -c -o bgpd-rde_aspa.o `test -f 'rde_aspa.c' || echo '$(srcdir)/'`rde_aspa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_aspa.Tpo $(DEPDIR)/bgpd-rde_aspa.Po
#	$(AM_V_CC)source='rde_aspa.c' object='bgpd-rde_aspa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_aspa.o `test -f 'rde_aspa.c' || echo '$(srcdir)/'`rde_aspa.c

bgpd-rde_aspa.obj: rde_aspa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_aspa.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_aspa.Tpo -c -o bgpd-rde_aspa.obj `if test -f 'rde_aspa.c'; then $(CYGPATH_W) 'rde_aspa.c'; else $(CYGPATH_W) '$(srcdir)/rde_aspa.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_aspa.Tpo $(DEPDIR)/bgpd-rde_aspa.Po
#	$(AM_V_CC)source='rde_aspa.c' object='bgpd-rde_aspa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_aspa.obj `if test -f 'rde_aspa.c'; then $(CYGPATH_W) 'rde_aspa.c'; else $(CYGPATH_W) '$(srcdir)/rde_aspa.c'; fi`

bgpd-pftable.o: pftable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pftable.o -MD -MP -MF $(DEPDIR)/bgpd-pftable.Tpo -c -o bgpd-pftable.o `test -f 'pftable.c' || echo '$(srcdir)/'`pftable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pftable.Tpo $(DEPDIR)/bgpd-pftable.Po
#	$(AM_V_CC)source='pftable.c' object='bgpd-pftable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pftable.o `test -f 'pftable.c' || echo '$(srcdir)/'`pftable.c

bgpd-pftable.obj: pftable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pftable.obj -MD -MP -MF $(DEPDIR)/bgpd-pftable.Tpo -c -o bgpd-pftable.obj `if test -f 'pftable.c'; then $(CYGPATH_W) 'pftable.c'; else $(CYGPATH_W) '$(srcdir)/pftable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pftable.Tpo $(DEPDIR)/bgpd-pftable.Po
#	$(AM_V_CC)source='pftable.c' object='bgpd-pftable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pftable.obj `if test -f 'pftable.c'; then $(CYGPATH_W) 'pftable.c'; else $(CYGPATH_W) '$(srcdir)/pftable.c'; fi`

bgpd-pftable-disabled.o: pftable-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pftable-disabled.o -MD -MP -MF $(DEPDIR)/bgpd-pftable-disabled.Tpo -c -o bgpd-pftable-disabled.o `test -f 'pftable-disabled.c' || echo '$(srcdir)/'`pftable-disabled.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pftable-disabled.Tpo $(DEPDIR)/bgpd-pftable-disabled.Po
#	$(AM_V_CC)source='pftable-disabled.c' object='bgpd-pftable-disabled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pftable-disabled.o `test -f 'pftable-disabled.c' || echo '$(srcdir)/'`pftable-disabled.c

bgpd-pftable-disabled.obj: pftable-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-pftable-disabled.obj -MD -MP -MF $(DEPDIR)/bgpd-pftable-disabled.Tpo -c -o bgpd-pftable-disabled.obj `if test -f 'pftable-disabled.c'; then $(CYGPATH_W) 'pftable-disabled.c'; else $(CYGPATH_W) '$(srcdir)/pftable-disabled.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-pftable-disabled.Tpo $(DEPDIR)/bgpd-pftable-disabled.Po
#	$(AM_V_CC)source='pftable-disabled.c' object='bgpd-pftable-disabled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-pftable-disabled.obj `if test -f 'pftable-disabled.c'; then $(CYGPATH_W) 'pftable-disabled.c'; else $(CYGPATH_W) '$(srcdir)/pftable-disabled.c'; fi`

bgpd-name2id.o: name2id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-name2id.o -MD -MP -MF $(DEPDIR)/bgpd-name2id.Tpo -c -o bgpd-name2id.o `test -f 'name2id.c' || echo '$(srcdir)/'`name2id.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-name2id.Tpo $(DEPDIR)/bgpd-name2id.Po
#	$(AM_V_CC)source='name2id.c' object='bgpd-name2id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-name2id.o `test -f 'name2id.c' || echo '$(srcdir)/'`name2id.c

bgpd-name2id.obj: name2id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-name2id.obj -MD -MP -MF $(DEPDIR)/bgpd-name2id.Tpo -c -o bgpd-name2id.obj `if test -f 'name2id.c'; then $(CYGPATH_W) 'name2id.c'; else $(CYGPATH_W) '$(srcdir)/name2id.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-name2id.Tpo $(DEPDIR)/bgpd-name2id.Po
#	$(AM_V_CC)source='name2id.c' object='bgpd-name2id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-name2id.obj `if test -f 'name2id.c'; then $(CYGPATH_W) 'name2id.c'; else $(CYGPATH_W) '$(srcdir)/name2id.c'; fi`

bgpd-util.o: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-util.o -MD -MP -MF $(DEPDIR)/bgpd-util.Tpo -c -o bgpd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-util.Tpo $(DEPDIR)/bgpd-util.Po
#	$(AM_V_CC)source='util.c' object='bgpd-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

bgpd-util.obj: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-util.obj -MD -MP -MF $(DEPDIR)/bgpd-util.Tpo -c -o bgpd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-util.Tpo $(DEPDIR)/bgpd-util.Po
#	$(AM_V_CC)source='util.c' object='bgpd-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

bgpd-carp.o: carp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-carp.o -MD -MP -MF $(DEPDIR)/bgpd-carp.Tpo -c -o bgpd-carp.o `test -f 'carp.c' || echo '$(srcdir)/'`carp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-carp.Tpo $(DEPDIR)/bgpd-carp.Po
#	$(AM_V_CC)source='carp.c' object='bgpd-carp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-carp.o `test -f 'carp.c' || echo '$(srcdir)/'`carp.c

bgpd-carp.obj: carp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-carp.obj -MD -MP -MF $(DEPDIR)/bgpd-carp.Tpo -c -o bgpd-carp.obj `if test -f 'carp.c'; then $(CYGPATH_W) 'carp.c'; else $(CYGPATH_W) '$(srcdir)/carp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-carp.Tpo $(DEPDIR)/bgpd-carp.Po
#	$(AM_V_CC)source='carp.c' object='bgpd-carp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-carp.obj `if test -f 'carp.c'; then $(CYGPATH_W) 'carp.c'; else $(CYGPATH_W) '$(srcdir)/carp.c'; fi`

bgpd-carp-disabled.o: carp-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-carp-disabled.o -MD -MP -MF $(DEPDIR)/bgpd-carp-disabled.Tpo -c -o bgpd-carp-disabled.o `test -f 'carp-disabled.c' || echo '$(srcdir)/'`carp-disabled.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-carp-disabled.Tpo $(DEPDIR)/bgpd-carp-disabled.Po
#	$(AM_V_CC)source='carp-disabled.c' object='bgpd-carp-disabled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-carp-disabled.o `test -f 'carp-disabled.c' || echo '$(srcdir)/'`carp-disabled.c

bgpd-carp-disabled.obj: carp-disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-carp-disabled.obj -MD -MP -MF $(DEPDIR)/bgpd-carp-disabled.Tpo -c -o bgpd-carp-disabled.obj `if test -f 'carp-disabled.c'; then $(CYGPATH_W) 'carp-disabled.c'; else $(CYGPATH_W) '$(srcdir)/carp-disabled.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-carp-disabled.Tpo $(DEPDIR)/bgpd-carp-disabled.Po
#	$(AM_V_CC)source='carp-disabled.c' object='bgpd-carp-disabled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-carp-disabled.obj `if test -f 'carp-disabled.c'; then $(CYGPATH_W) 'carp-disabled.c'; else $(CYGPATH_W) '$(srcdir)/carp-disabled.c'; fi`

bgpd-timer.o: timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-timer.o -MD -MP -MF $(DEPDIR)/bgpd-timer.Tpo -c -o bgpd-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-timer.Tpo $(DEPDIR)/bgpd-timer.Po
#	$(AM_V_CC)source='timer.c' object='bgpd-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c

bgpd-timer.obj: timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-timer.obj -MD -MP -MF $(DEPDIR)/bgpd-timer.Tpo -c -o bgpd-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-timer.Tpo $(DEPDIR)/bgpd-timer.Po
#	$(AM_V_CC)source='timer.c' object='bgpd-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`

bgpd-rde_peer.o: rde_peer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_peer.o -MD -MP -MF $(DEPDIR)/bgpd-rde_peer.Tpo -c -o bgpd-rde_peer.o `test -f 'rde_peer.c' || echo '$(srcdir)/'`rde_peer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_peer.Tpo $(DEPDIR)/bgpd-rde_peer.Po
#	$(AM_V_CC)source='rde_peer.c' object='bgpd-rde_peer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_peer.o `test -f 'rde_peer.c' || echo '$(srcdir)/'`rde_peer.c

bgpd-rde_peer.obj: rde_peer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rde_peer.obj -MD -MP -MF $(DEPDIR)/bgpd-rde_peer.Tpo -c -o bgpd-rde_peer.obj `if test -f 'rde_peer.c'; then $(CYGPATH_W) 'rde_peer.c'; else $(CYGPATH_W) '$(srcdir)/rde_peer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rde_peer.Tpo $(DEPDIR)/bgpd-rde_peer.Po
#	$(AM_V_CC)source='rde_peer.c' object='bgpd-rde_peer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rde_peer.obj `if test -f 'rde_peer.c'; then $(CYGPATH_W) 'rde_peer.c'; else $(CYGPATH_W) '$(srcdir)/rde_peer.c'; fi`

bgpd-rtr.o: rtr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rtr.o -MD -MP -MF $(DEPDIR)/bgpd-rtr.Tpo -c -o bgpd-rtr.o `test -f 'rtr.c' || echo '$(srcdir)/'`rtr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rtr.Tpo $(DEPDIR)/bgpd-rtr.Po
#	$(AM_V_CC)source='rtr.c' object='bgpd-rtr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rtr.o `test -f 'rtr.c' || echo '$(srcdir)/'`rtr.c

bgpd-rtr.obj: rtr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rtr.obj -MD -MP -MF $(DEPDIR)/bgpd-rtr.Tpo -c -o bgpd-rtr.obj `if test -f 'rtr.c'; then $(CYGPATH_W) 'rtr.c'; else $(CYGPATH_W) '$(srcdir)/rtr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rtr.Tpo $(DEPDIR)/bgpd-rtr.Po
#	$(AM_V_CC)source='rtr.c' object='bgpd-rtr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rtr.obj `if test -f 'rtr.c'; then $(CYGPATH_W) 'rtr.c'; else $(CYGPATH_W) '$(srcdir)/rtr.c'; fi`

bgpd-rtr_proto.o: rtr_proto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rtr_proto.o -MD -MP -MF $(DEPDIR)/bgpd-rtr_proto.Tpo -c -o bgpd-rtr_proto.o `test -f 'rtr_proto.c' || echo '$(srcdir)/'`rtr_proto.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rtr_proto.Tpo $(DEPDIR)/bgpd-rtr_proto.Po
#	$(AM_V_CC)source='rtr_proto.c' object='bgpd-rtr_proto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rtr_proto.o `test -f 'rtr_proto.c' || echo '$(srcdir)/'`rtr_proto.c

bgpd-rtr_proto.obj: rtr_proto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-rtr_proto.obj -MD -MP -MF $(DEPDIR)/bgpd-rtr_proto.Tpo -c -o bgpd-rtr_proto.obj `if test -f 'rtr_proto.c'; then $(CYGPATH_W) 'rtr_proto.c'; else $(CYGPATH_W) '$(srcdir)/rtr_proto.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-rtr_proto.Tpo $(DEPDIR)/bgpd-rtr_proto.Po
#	$(AM_V_CC)source='rtr_proto.c' object='bgpd-rtr_proto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-rtr_proto.obj `if test -f 'rtr_proto.c'; then $(CYGPATH_W) 'rtr_proto.c'; else $(CYGPATH_W) '$(srcdir)/rtr_proto.c'; fi`

bgpd-flowspec.o: flowspec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-flowspec.o -MD -MP -MF $(DEPDIR)/bgpd-flowspec.Tpo -c -o bgpd-flowspec.o `test -f 'flowspec.c' || echo '$(srcdir)/'`flowspec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-flowspec.Tpo $(DEPDIR)/bgpd-flowspec.Po
#	$(AM_V_CC)source='flowspec.c' object='bgpd-flowspec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-flowspec.o `test -f 'flowspec.c' || echo '$(srcdir)/'`flowspec.c

bgpd-flowspec.obj: flowspec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -MT bgpd-flowspec.obj -MD -MP -MF $(DEPDIR)/bgpd-flowspec.Tpo -c -o bgpd-flowspec.obj `if test -f 'flowspec.c'; then $(CYGPATH_W) 'flowspec.c'; else $(CYGPATH_W) '$(srcdir)/flowspec.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bgpd-flowspec.Tpo $(DEPDIR)/bgpd-flowspec.Po
#	$(AM_V_CC)source='flowspec.c' object='bgpd-flowspec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bgpd_CFLAGS) $(CFLAGS) -c -o bgpd-flowspec.obj `if test -f 'flowspec.c'; then $(CYGPATH_W) 'flowspec.c'; else $(CYGPATH_W) '$(srcdir)/flowspec.c'; fi`

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man5: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man5dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man5dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man5dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.5[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man5dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man5dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man5dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man5dir)" || exit $$?; }; \
	done; }

uninstall-man5:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man5dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.5[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man5dir)'; $(am__uninstall_files_from_dir)
install-man8: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man8dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man8dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man8dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.8[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man8dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man5dir)" "$(DESTDIR)$(man8dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-$(am__rm_f) $(CLEANFILES)

distclean-generic:
	-$(am__rm_f) $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || $(am__rm_f) $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-$(am__rm_f) parse.c
clean: clean-am

clean-am: clean-generic clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f ./$(DEPDIR)/bgpd-bgpd.Po
	-rm -f ./$(DEPDIR)/bgpd-carp-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-carp.Po
	-rm -f ./$(DEPDIR)/bgpd-config.Po
	-rm -f ./$(DEPDIR)/bgpd-control.Po
	-rm -f ./$(DEPDIR)/bgpd-flowspec.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-freebsd.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-linux.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute.Po
	-rm -f ./$(DEPDIR)/bgpd-log.Po
	-rm -f ./$(DEPDIR)/bgpd-logmsg.Po
	-rm -f ./$(DEPDIR)/bgpd-monotime.Po
	-rm -f ./$(DEPDIR)/bgpd-mrt.Po
	-rm -f ./$(DEPDIR)/bgpd-name2id.Po
	-rm -f ./$(DEPDIR)/bgpd-parse.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-freebsd.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-linux.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey.Po
	-rm -f ./$(DEPDIR)/bgpd-pftable-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-pftable.Po
	-rm -f ./$(DEPDIR)/bgpd-printconf.Po
	-rm -f ./$(DEPDIR)/bgpd-rde.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_aspa.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_attr.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_community.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_decide.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_filter.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_peer.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_prefix.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_rib.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_sets.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_trie.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_update.Po
	-rm -f ./$(DEPDIR)/bgpd-rtr.Po
	-rm -f ./$(DEPDIR)/bgpd-rtr_proto.Po
	-rm -f ./$(DEPDIR)/bgpd-session.Po
	-rm -f ./$(DEPDIR)/bgpd-session_bgp.Po
	-rm -f ./$(DEPDIR)/bgpd-timer.Po
	-rm -f ./$(DEPDIR)/bgpd-util.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man5 install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f ./$(DEPDIR)/bgpd-bgpd.Po
	-rm -f ./$(DEPDIR)/bgpd-carp-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-carp.Po
	-rm -f ./$(DEPDIR)/bgpd-config.Po
	-rm -f ./$(DEPDIR)/bgpd-control.Po
	-rm -f ./$(DEPDIR)/bgpd-flowspec.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-freebsd.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute-linux.Po
	-rm -f ./$(DEPDIR)/bgpd-kroute.Po
	-rm -f ./$(DEPDIR)/bgpd-log.Po
	-rm -f ./$(DEPDIR)/bgpd-logmsg.Po
	-rm -f ./$(DEPDIR)/bgpd-monotime.Po
	-rm -f ./$(DEPDIR)/bgpd-mrt.Po
	-rm -f ./$(DEPDIR)/bgpd-name2id.Po
	-rm -f ./$(DEPDIR)/bgpd-parse.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-freebsd.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey-linux.Po
	-rm -f ./$(DEPDIR)/bgpd-pfkey.Po
	-rm -f ./$(DEPDIR)/bgpd-pftable-disabled.Po
	-rm -f ./$(DEPDIR)/bgpd-pftable.Po
	-rm -f ./$(DEPDIR)/bgpd-printconf.Po
	-rm -f ./$(DEPDIR)/bgpd-rde.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_aspa.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_attr.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_community.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_decide.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_filter.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_peer.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_prefix.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_rib.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_sets.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_trie.Po
	-rm -f ./$(DEPDIR)/bgpd-rde_update.Po
	-rm -f ./$(DEPDIR)/bgpd-rtr.Po
	-rm -f ./$(DEPDIR)/bgpd-rtr_proto.Po
	-rm -f ./$(DEPDIR)/bgpd-session.Po
	-rm -f ./$(DEPDIR)/bgpd-session_bgp.Po
	-rm -f ./$(DEPDIR)/bgpd-timer.Po
	-rm -f ./$(DEPDIR)/bgpd-util.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-man uninstall-sbinPROGRAMS

uninstall-man: uninstall-man5 uninstall-man8

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-sbinPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man5 install-man8 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-man \
	uninstall-man5 uninstall-man8 uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


bgpd.conf.5: bgpd.conf.5.in
	$(SED) \
		-e 's|@BGPD_USER[@]|$(BGPD_USER)|g' \
		-e 's|@SYSCONFDIR[@]|$(sysconfdir)|g' \
		-e 's|@RUNSTATEDIR[@]|$(runstatedir)|g' \
		'$(srcdir)/bgpd.conf.5.in' >$@

bgpd.8: bgpd.8.in
	$(SED) \
		-e 's|@BGPD_USER[@]|$(BGPD_USER)|g' \
		-e 's|@SYSCONFDIR[@]|$(sysconfdir)|g' \
		-e 's|@RUNSTATEDIR[@]|$(runstatedir)|g' \
		'$(srcdir)/bgpd.8.in' >$@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

# Tell GNU make to disable its built-in pattern rules.
%:: %,v
%:: RCS/%,v
%:: RCS/%
%:: s.%
%:: SCCS/s.%
